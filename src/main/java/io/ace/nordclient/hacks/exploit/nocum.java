package io.ace.nordclient.hacks.exploit;

import io.ace.nordclient.CousinWare;
import io.ace.nordclient.command.Command;
import io.ace.nordclient.hacks.Hack;
import io.ace.nordclient.hacks.misc.NotResponding;
import io.ace.nordclient.utilz.Setting;
import net.minecraft.network.play.client.CPacketPlayerTryUseItemOnBlock;
import net.minecraft.network.play.client.CPacketUseEntity;
import net.minecraft.util.EnumFacing;
import net.minecraft.util.math.BlockPos;
import net.minecraft.util.EnumHand;

public class nocum extends Hack {

    Setting centerX;
    Setting centerZ;
    Setting step;
    Setting levelY;
    Setting amountPerTick;
    Setting downlayer;
    Setting skip;

    int spiralX, spiralZ;
    int x,z;
    int centerx,centerz;
    int steps;
    boolean isSkipping=false;
    public static nocum INSTANCE;

    public nocum() {
        super("NocomBypass", Category.EXPLOIT, -1);
        CousinWare.INSTANCE.settingsManager.rSetting(centerX = new Setting("CenterX", this, 0, -30000000, 30000000, true, "ModuleDLSpiralx1", true));
        CousinWare.INSTANCE.settingsManager.rSetting(centerZ = new Setting("CenterZ", this, 0, -30000000, 30000000, true, "ModuleDLSpiralz1", true));
        CousinWare.INSTANCE.settingsManager.rSetting(downlayer = new Setting("DownLayer", this, 500000, 0, 30000000, true, "ModuleDLSpiralz1", true));
        CousinWare.INSTANCE.settingsManager.rSetting(levelY = new Setting("Y level", this, 0, 55, 95, true, "yLevel", true));
        CousinWare.INSTANCE.settingsManager.rSetting(step = new Setting("BlockSkip", this, 144, 0, 200, true, "ModuleDLSpiralStep", true));
        CousinWare.INSTANCE.settingsManager.rSetting(amountPerTick = new Setting("PacketsPerTick", this, 9, 0, 11, true, "ModuleDLSpiralAmountPerTick", true));
        CousinWare.INSTANCE.settingsManager.rSetting(skip = new Setting("Skip", this, 100000, 0, 1000000, true, "ModuleDLSpiralSkip", true));
    }

    @Override
    public void onEnable() {
        spiralX = skip.getValInt();
        spiralZ = skip.getValInt();
        centerx = centerX.getValInt();
        centerz = centerZ.getValInt();
        steps = step.getValInt();
        //isSkipping = (skip.getValue() != 0);
        //
    }


    @Override
    public void onUpdate() {
        int y = levelY.getValInt();
        if (mc.player == null || mc.player.connection == null)
            return;
        if (NotResponding.spontNotTime() > 16)
            return;
        for (int i = 0; i < amountPerTick.getValInt(); i++) {
            if(x >= downlayer.getValInt()){
                y = y -1;
                spiralX = skip.getValInt();
                spiralZ = skip.getValInt();
                centerx = 0;
                centerz = 0;
            }
            x = spiralX + centerx; //add to move center
            z = spiralZ + centerz; // ^

            mc.player.connection.sendPacket(new CPacketPlayerTryUseItemOnBlock(new BlockPos(x,y, z), EnumFacing.SOUTH,EnumHand.MAIN_HAND, 0, 0, 0));
            //
            //if skipping a radius around our center, use <
            //otherwise use <=

            }
            if (isSkipping) {
                if (Math.abs(spiralX) < Math.abs(spiralZ) && (spiralX != spiralZ || spiralX >= 0))
                    spiralX += ((spiralZ >= 0) ? steps : -steps);

                else
                    spiralZ += ((spiralX >= 0) ? -steps : steps);
            } else {
                if (Math.abs(spiralX) <= Math.abs(spiralZ) && (spiralX != spiralZ || spiralX >= 0))
                    spiralX += ((spiralZ >= 0) ? steps : -steps);
                else
                    spiralZ += ((spiralX >= 0) ? -steps : steps);

            }
        }


    @Override
    public void onDisable() {
        Command.sendClientSideMessage("Stopped at "+ x + ", " + z);
    }

    @Override
    public String getHudInfo() {
        return x + " , " + levelY.getValInt() + " , " + z;
    }
}
